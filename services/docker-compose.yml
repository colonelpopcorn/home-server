#Reference: https://www.smarthomebeginner.com/docker-home-media-server-2018-basic
#Requirement: Set environment variables: USERDIR, PUID, PGID, TRAEFIK_HTTP_PORT, TRAEFIK_HTTPS_PORT, TRAEFIK_UI_PORT, and TZ as explained in the reference.
version: '3'
services:
#region Cluster Services
# traefik - Main proxy server, this the goods kids.
  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAIN_NAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "30080:80"
      - "30443:443"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAIN_NAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DOCKER_DIR}/traefik:/etc/traefik
      - ${DOCKER_DIR}/shared:/shared
# Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer
    restart: always
    command: --templates http://templates/templates.json --admin-password-file '/shared/.htpasswd'
    # ports:
    #   - "XXXX:9000"
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAIN_NAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_DIR}/portainer/data:/data
      - ${DOCKER_DIR}/shared:/shared
    environment:
      - TZ=${TZ}

      # placement:
      #   constraints: [ node.role == manager ]
      # restart_policy:
      #   condition: on-failure
      #   window: 1200s # This value should probably be equal to the duration of your battery backup when off mains power.
# Watchtower - Automatic Update of Containers/Apps
  watchtower:
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
        window: 1200s # This value should probably be equal to the duration of your battery backup when off mains power.
#endregion

#region Development Services
# Huggin - For IFTTT?

# osTicket - To support my own infrastructure I guess.

# Archimedes - Hedwig chat-bot, needs to be built.

# Jenkins CI - Docker powered, blue ocean, teenaged CI daydream.

# Eclipse Che - Web based IDE powered by Docker.

# OpenFaaS - Could be fun, eh?

# Wekan - Could be useful maybe?

# Pi-Hole - Should go somewhere right?

# Gittea - Simple git hosting, may or may not use. SSH no is working.
  # gittea:
  #   image: gitea/gitea
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.gittea.backend=gittea"
  #     - "traefik.gittea.frontend.rule=Host:gittea.${DOMAIN_NAME}"
  #     - "traefik.gittea.port=3000"
  #     - "traefik.gitteassh.backend=gitteassh"
  #     - "traefik.gitteassh.frontend.rule=Host:gitteassh.${DOMAIN_NAME}"
  #     - "traefik.gitteassh.port=22"
  #     - "traefik.docker.network=traefik_proxy"
  #   volumes:
  #     - ${DOCKER_DIR}/gittea/data:/data
  #   restart: always

# Mattermost - Chat platform, NOT WORKING! Oh wait, just linux permissions lolololol...
  mattermost:
    image: mattermost/mattermost-prod-app
    restart: unless-stopped
    labels:
        - "traefik.enable=true"
        - "traefik.backend=mattermost"
        - "traefik.frontend.rule=Host:mattermost.${DOMAIN_NAME}"
        - "traefik.port=8000"
        - "traefik.docker.network=traefik_proxy"
    volumes:
        - ${DOCKER_DIR}/mattermost/config:/mattermost/config:rw
        - ${DOCKER_DIR}/mattermost/data:/mattermost/data:rw
        - ${DOCKER_DIR}/mattermost/logs:/mattermost/logs:rw
        - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_HOST=${POSTGRES_HOST}
      - DB_PORT_NUMBER=${POSTGRES_PORT}
      - MM_USERNAME=${POSTGRES_USER}
      - MM_PASSWORD=${POSTGRES_PASS}
      - MM_DBNAME=${POSTGRES_DB_NAME}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#endregion

#region Game Services
# Left 4 Dead 2

# TF2

# Garry's Mod

# Minecraft

# Terraria

# Starbound

#endregion

#region Media Services
# Radarr – Movie Download and Management
  radarr:
    image: linuxserver/radarr
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAIN_NAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/radarr:/config
      - ${DOCKER_DIR}/transmission-vpn/completed:/downloads
      - ${DOCKER_DIR}/media/Movies:/movies
      - "/etc/localtime:/etc/localtime:ro"
      - ${DOCKER_DIR}/shared:/shared
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Sonarr – TV Show Download and Management
  sonarr:
    image: linuxserver/sonarr
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAIN_NAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/sonarr:/config
      - ${DOCKER_DIR}/transmission-vpn/completed:/downloads
      - ${DOCKER_DIR}/media/Television:/tv
      - "/etc/localtime:/etc/localtime:ro"
      - ${DOCKER_DIR}/shared:/shared
    # ports:
    #     - "XXXX:8989"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Lidarr - Music Download and Management
  lidarr:
    image: linuxserver/lidarr
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lidarr"
      - "traefik.frontend.rule=Host:lidarr.${DOMAIN_NAME}"
      - "traefik.port=8686"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/lidarr:/config
      - ${DOCKER_DIR}/Downloads:/downloads
      - ${DOCKER_DIR}/media/Music:/music
      - "/etc/localtime:/etc/localtime:ro"
      - ${DOCKER_DIR}/shared:/shared
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Mylar - Comic book downloader
  mylar:
    image: linuxserver/mylar
    labels:
      - "traefik.enable=true"
      - "traefik.backend=mylar"
      - "traefik.frontend.rule=Host:mylar.${DOMAIN_NAME}"
      - "traefik.port=8090"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/mylar:/config
      - ${DOCKER_DIR}/Downloads:/downloads
      - ${DOCKER_DIR}/media/Comics:/comics
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Lazy Librarian - eBook downloader
  lazylibrarian:
    image: linuxserver/lazylibrarian
    labels:
      - "traefik.enable=true"
      - "traefik.backend=lazylibrarian"
      - "traefik.frontend.rule=Host:lazylibrarian.${DOMAIN_NAME}"
      - "traefik.port=5299"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/lazylibrarian:/config
      - ${DOCKER_DIR}/Downloads:/downloads
      - ${DOCKER_DIR}/media/Books:/books
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Plex Media Server - Enough said I think
  plexms:
    restart: always
    image: linuxserver/plex
    volumes:
      - ${DOCKER_DIR}/plexms:/config
      - ${DOCKER_DIR}/media/Television:/data/tvshows
      - ${DOCKER_DIR}/media/Movies:/data/movies
      - ${DOCKER_DIR}/media/Music:/data/music
      - ${DOCKER_DIR}/shared:/shared
    network_mode: "host"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}

# Tautulli (aka PlexPy) – Monitoring Plex Usage
  tautulli:
    restart: always
    image: linuxserver/tautulli
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tautulli"
      - "traefik.frontend.rule=Host:tautulli.${DOMAIN_NAME}"
      - "traefik.port=8181"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/tautulli/config:/config
      - ${DOCKER_DIR}/tautulli/logs:/logs:ro
      - ${DOCKER_DIR}/shared:/shared
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Ombi – Accept Requests for your Media Server
  ombi:
    restart: always
    image: linuxserver/ombi
    labels:
      - "traefik.enable=true"
      - "traefik.backend=ombi"
      - "traefik.frontend.rule=Host:ombi.${DOMAIN_NAME}"
      - "traefik.port=3579"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/ombi:/config
      - ${DOCKER_DIR}/shared:/shared
    # ports:
    #   - "XXXX:3579"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

# Jackett – Torrent Proxy
  jackett:
    image: "linuxserver/jackett"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      - "traefik.frontend.rule=Host:jackett.${DOMAIN_NAME}"
      - "traefik.port=9117"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - ${DOCKER_DIR}/jackett:/config
      - ${DOCKER_DIR}/transmission-vpn/completed:/downloads
      - "/etc/localtime:/etc/localtime:ro"
      - ${DOCKER_DIR}/shared:/shared
    # ports:
    #   - "XXXX:9117"
    restart: always
    environment:
      - PUID=${MMOST_PUID}
      - PGID=${MMOST_PGID}
      - TZ=${TZ}

#endregion

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
