version: "3.6"
services:
# traefik - Main proxy server, this the goods kids.
  traefik:
    image: traefik:latest
    command: --docker --docker.swarmMode --api # Enables the web UI and tells Tr√¶fik to listen to docker
    networks:
      - default
      - traefik_proxy
    ports:
      # - "8080:80" # For Windows because it doesn't like to use the basic ports for HTTP(S)
      # - "4430:443" # For Windows because it doesn't like to use the basic ports for HTTP(S)
      - "80:80"
      - "443:443"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - ./configs/traefik.toml:/etc/traefik/traefik.toml # This should be commented out until our infra is ready.
      - ${DOCKER_DIR}/traefik:/etc/traefik
      - ${DOCKER_DIR}/shared:/shared
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.backend=traefik"
        - "traefik.frontend.rule=Host:traefik.${DOMAIN_NAME}"
        - "traefik.port=8080"
        - "traefik.docker.network=traefik_proxy"
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
        window: 1200s # This value should probably be equal to the duration of your battery backup when off mains power.

# Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer
    restart: always
    command: --templates http://templates/templates.json
    # ports:
    #   - "XXXX:9000"
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAIN_NAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DOCKER_DIR}/portainer/data:/data
      - ${DOCKER_DIR}/shared:/shared
    environment:
      - TZ=${TZ}
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
        window: 1200s # This value should probably be equal to the duration of your battery backup when off mains power.

# Watchtower - Automatic Update of Containers/Apps
  watchtower:
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
        window: 1200s # This value should probably be equal to the duration of your battery backup when off mains power.
